// <auto-generated />
using GateKeeper.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace GateKeeper.Data.Migrations
{
    [DbContext(typeof(GateKeeperDbContext))]
    partial class GateKeeperDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("GateKeeper.Domain.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CondominiumBlockId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumBlockId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.Condominium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Condominiums");
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.CondominiumBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CondominiumId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("CondominiumBlocks");
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.ResidentApartment", b =>
                {
                    b.Property<int>("ResidentId");

                    b.Property<int>("ApartmentId");

                    b.Property<bool>("Deleted");

                    b.HasKey("ResidentId", "ApartmentId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("ResidentAparments");
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.Apartment", b =>
                {
                    b.HasOne("GateKeeper.Domain.Entities.CondominiumBlock", "CondominiumBlock")
                        .WithMany("Apartments")
                        .HasForeignKey("CondominiumBlockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.Condominium", b =>
                {
                    b.OwnsOne("GateKeeper.Domain.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CondominiumId");

                            b1.Property<string>("AddressNumber");

                            b1.Property<string>("City");

                            b1.Property<string>("Complement");

                            b1.Property<string>("Neighborhood");

                            b1.Property<string>("PostCode");

                            b1.Property<string>("State");

                            b1.Property<string>("StreetAddress");

                            b1.ToTable("Condominiums");

                            b1.HasOne("GateKeeper.Domain.Entities.Condominium")
                                .WithOne("Address")
                                .HasForeignKey("GateKeeper.Domain.Entities.Address", "CondominiumId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.CondominiumBlock", b =>
                {
                    b.HasOne("GateKeeper.Domain.Entities.Condominium", "Condominium")
                        .WithMany("Blocks")
                        .HasForeignKey("CondominiumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GateKeeper.Domain.Entities.ResidentApartment", b =>
                {
                    b.HasOne("GateKeeper.Domain.Entities.Apartment", "Apartment")
                        .WithMany("ResidentApartments")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GateKeeper.Domain.Entities.Resident", "Resident")
                        .WithMany("ResidentApartments")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
